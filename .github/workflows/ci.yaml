on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main
  workflow_dispatch:

name: ci

jobs:
  test:
    strategy:
      matrix:
        go-version: [ 1.16.x, 1.17.x, 1.18.x, 1.19.x, 1.20.x, 1.21.x ]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    services:
      pgsql:
        image: postgres:12
        env:
          POSTGRES_DB: test
          POSTGRES_PASSWORD: postgres
        ports:
          - "5432:5432"
      mysql:
        image: mysql:8
        env:
          MYSQL_DATABASE: test
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
        ports:
          - "3306:3306"
      mssql:
        image: mcr.microsoft.com/mssql/server:2017-latest
        env:
          ACCEPT_EULA: Y
          MSSQL_PID: Standard
          SA_PASSWORD: MwantsaSecurePassword1
        ports:
          - "1433:1433"
    steps:
      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Format
        run: if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then exit 1; fi
        if: matrix.os != 'windows-latest' && matrix.go-version == '1.19.x'
      - name: Test
        run: |
          go test -race ./...
          go test -v -tags sqlite
          go test -v -tags mysql
          go test -v -tags postgresql
          go test -v -tags sqlserver
